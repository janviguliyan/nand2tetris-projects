// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // 8 RAM8 chips for RAM4K, address[0..2]--> RAM8 taakes 3 bit address
    // this address is used to select one of the registers within the selected RAM8 (LSB)
    RAM4K(in=in, load=load000, address=address[0..11], out=out000);
    RAM4K(in=in, load=load001, address=address[0..11], out=out001);
    RAM4K(in=in, load=load010, address=address[0..11], out=out010);
    RAM4K(in=in, load=load011, address=address[0..11], out=out011);
    RAM4K(in=in, load=load100, address=address[0..11], out=out100);
    RAM4K(in=in, load=load101, address=address[0..11], out=out101);
    RAM4K(in=in, load=load110, address=address[0..11], out=out110);
    RAM4K(in=in, load=load111, address=address[0..11], out=out111);

    // address[3..5]--> used to select one of the RAM8 chips (MSB)
    // DMUX8Way --> have 8 RAM8 for, selecting which RAM gets load for an address
    DMux8Way(in=load, sel=address[11..13], a=load000, b=load001, c=load010, d=load011, e=load100, f=load101, g=load110, h=load111);
    
    // MUX8Way16 8 RAM8 with width 16 bits for selecting output for an address
    Mux8Way16(a=out000, b=out001, c=out010, d=out011, e=out100, f=out101, g=out110, h=out111, sel=address[11..13], out=out);
    //// Replace this comment with your code.
}
